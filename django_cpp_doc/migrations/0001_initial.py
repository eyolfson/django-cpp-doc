# Generated by Django 2.1.5 on 2019-01-24 01:41

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClangImmutabilityMethodDependence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'cpp_doc_immutability_method_dependence',
            },
        ),
        migrations.CreateModel(
            name='CompileCommand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command_line', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=256), blank=True, size=256)),
            ],
            options={
                'verbose_name': 'Compile Command',
                'verbose_name_plural': 'Compile Commands',
                'db_table': 'cpp_doc_compile_command',
            },
        ),
        migrations.CreateModel(
            name='Decl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(blank=True, max_length=8192)),
                ('name', models.CharField(blank=True, max_length=8192)),
            ],
            options={
                'verbose_name': 'Decl',
                'verbose_name_plural': 'Decls',
                'db_table': 'cpp_doc_decl',
                'ordering': ['path'],
            },
        ),
        migrations.CreateModel(
            name='FileDescriptor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=256)),
                ('path', models.CharField(blank=True, max_length=4096)),
            ],
            options={
                'verbose_name': 'File Descriptor',
                'verbose_name_plural': 'File Descriptors',
                'db_table': 'cpp_doc_file_descriptor',
                'ordering': ['path'],
            },
        ),
        migrations.CreateModel(
            name='Linkage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='linkage_files', to='django_cpp_doc.FileDescriptor')),
                ('output', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='linkage_outputs', to='django_cpp_doc.FileDescriptor')),
            ],
            options={
                'verbose_name': 'Linkage',
                'verbose_name_plural': 'Linkages',
                'db_table': 'cpp_doc_linkage',
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'cpp_doc_package',
                'ordering': ['package_name', 'version'],
            },
        ),
        migrations.CreateModel(
            name='PackageName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('slug', models.SlugField()),
            ],
            options={
                'db_table': 'cpp_doc_package_name',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PresumedLoc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line', models.IntegerField()),
                ('col', models.IntegerField()),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='presumed_locs', to='django_cpp_doc.FileDescriptor')),
            ],
            options={
                'verbose_name': 'Presumed Loc',
                'verbose_name_plural': 'Presumed Locs',
                'db_table': 'cpp_doc_presumed_loc',
            },
        ),
        migrations.CreateModel(
            name='PublicView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Public View',
                'verbose_name_plural': 'Public Views',
                'db_table': 'cpp_doc_public_view',
            },
        ),
        migrations.CreateModel(
            name='FieldDecl',
            fields=[
                ('decl', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='field', serialize=False, to='django_cpp_doc.Decl')),
                ('is_mutable', models.BooleanField()),
                ('access', models.PositiveIntegerField(choices=[(0, 'Public'), (1, 'Protected'), (2, 'Private'), (3, 'None')])),
            ],
            options={
                'verbose_name': 'Field Decl',
                'verbose_name_plural': 'Field Decls',
                'db_table': 'cpp_doc_field_decl',
            },
        ),
        migrations.CreateModel(
            name='FunctionDecl',
            fields=[
                ('decl', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='function', serialize=False, to='django_cpp_doc.Decl')),
            ],
            options={
                'verbose_name': 'Function Decl',
                'verbose_name_plural': 'Function Decls',
                'db_table': 'cpp_doc_function_decl',
            },
        ),
        migrations.CreateModel(
            name='MethodDecl',
            fields=[
                ('decl', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='method', serialize=False, to='django_cpp_doc.Decl')),
                ('is_const', models.BooleanField()),
                ('is_pure', models.BooleanField()),
                ('access', models.PositiveIntegerField(choices=[(0, 'Public'), (1, 'Protected'), (2, 'Private'), (3, 'None')])),
                ('mangled_name', models.CharField(blank=True, max_length=4096)),
            ],
            options={
                'verbose_name': 'Method Decl',
                'verbose_name_plural': 'Method Decls',
                'db_table': 'cpp_doc_method_decl',
            },
        ),
        migrations.CreateModel(
            name='NamespaceDecl',
            fields=[
                ('decl', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='namespace', serialize=False, to='django_cpp_doc.Decl')),
            ],
            options={
                'verbose_name': 'Namespace Decl',
                'verbose_name_plural': 'Namespace Decls',
                'db_table': 'cpp_doc_namespace_decl',
            },
        ),
        migrations.CreateModel(
            name='RecordDecl',
            fields=[
                ('decl', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='record', serialize=False, to='django_cpp_doc.Decl')),
                ('is_abstract', models.BooleanField()),
                ('is_dependent', models.BooleanField()),
            ],
            options={
                'verbose_name': 'Record Decl',
                'verbose_name_plural': 'Record Decls',
                'db_table': 'cpp_doc_record_decl',
            },
        ),
        migrations.AddField(
            model_name='publicview',
            name='decl',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='public_view', to='django_cpp_doc.Decl'),
        ),
        migrations.AddField(
            model_name='package',
            name='package_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='django_cpp_doc.PackageName'),
        ),
        migrations.AddField(
            model_name='linkage',
            name='package',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='linkages', to='django_cpp_doc.Package'),
        ),
        migrations.AddField(
            model_name='filedescriptor',
            name='package',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_descriptors', to='django_cpp_doc.Package'),
        ),
        migrations.AddField(
            model_name='filedescriptor',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='django_cpp_doc.FileDescriptor'),
        ),
        migrations.AddField(
            model_name='decl',
            name='package',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='decl_contexts', to='django_cpp_doc.Package'),
        ),
        migrations.AddField(
            model_name='decl',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='django_cpp_doc.Decl'),
        ),
        migrations.AddField(
            model_name='decl',
            name='presumed_loc',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='decls', to='django_cpp_doc.PresumedLoc'),
        ),
        migrations.AddField(
            model_name='compilecommand',
            name='directory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compile_command_directories', to='django_cpp_doc.FileDescriptor'),
        ),
        migrations.AddField(
            model_name='compilecommand',
            name='file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compile_command_files', to='django_cpp_doc.FileDescriptor'),
        ),
        migrations.AddField(
            model_name='compilecommand',
            name='output',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='compile_command_outputs', to='django_cpp_doc.FileDescriptor'),
        ),
        migrations.AddField(
            model_name='compilecommand',
            name='package',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compile_commands', to='django_cpp_doc.Package'),
        ),
        migrations.CreateModel(
            name='ClangImmutabilityCheckField',
            fields=[
                ('field', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='immutability_check', serialize=False, to='django_cpp_doc.FieldDecl')),
                ('is_transitive', models.BooleanField()),
                ('is_explicit', models.BooleanField()),
            ],
            options={
                'verbose_name': 'Check Fields',
                'verbose_name_plural': 'Check Fields',
                'db_table': 'cpp_doc_clang_immutability_check_field',
            },
        ),
        migrations.CreateModel(
            name='ClangImmutabilityCheckMethod',
            fields=[
                ('mutate_result', models.PositiveIntegerField(choices=[(1, 'No'), (2, 'Maybe')])),
                ('return_result', models.PositiveIntegerField(choices=[(1, 'Noop'), (2, 'Field (Transitive)'), (3, 'Field (Non-transitive)'), (4, 'Other')])),
                ('method', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='immutability_check', serialize=False, to='django_cpp_doc.MethodDecl')),
            ],
            options={
                'verbose_name': 'Check Method',
                'verbose_name_plural': 'Check Methods',
                'db_table': 'cpp_doc_clang_immutability_check_method',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClangImmutabilityCheckMethodResult',
            fields=[
                ('method', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='check_result', serialize=False, to='django_cpp_doc.MethodDecl')),
                ('should_be_const', models.BooleanField()),
            ],
            options={
                'verbose_name': 'Check Method Result',
                'verbose_name_plural': 'Check Method Results',
                'db_table': 'cpp_doc_immutability_check_method_result',
            },
        ),
        migrations.CreateModel(
            name='RecordCounts',
            fields=[
                ('num_methods', models.PositiveIntegerField()),
                ('num_mutable_methods', models.PositiveIntegerField()),
                ('num_mutable_no_easy', models.PositiveIntegerField()),
                ('num_mutable_no_easy_non_stub', models.PositiveIntegerField()),
                ('num_mutable_no_odd', models.PositiveIntegerField()),
                ('num_mutable_maybe', models.PositiveIntegerField()),
                ('num_mutable_no_ret_noop', models.PositiveIntegerField()),
                ('num_mutable_no_ret_field_t', models.PositiveIntegerField()),
                ('num_mutable_no_ret_field_nt', models.PositiveIntegerField()),
                ('num_mutable_no_ret_other', models.PositiveIntegerField()),
                ('num_mutable_maybe_ret_noop', models.PositiveIntegerField()),
                ('num_mutable_maybe_ret_field_t', models.PositiveIntegerField()),
                ('num_mutable_maybe_ret_field_nt', models.PositiveIntegerField()),
                ('num_mutable_maybe_ret_other', models.PositiveIntegerField()),
                ('num_const_methods', models.PositiveIntegerField()),
                ('num_const_no_easy', models.PositiveIntegerField()),
                ('num_const_no_odd', models.PositiveIntegerField()),
                ('num_const_maybe', models.PositiveIntegerField()),
                ('num_const_no_ret_noop', models.PositiveIntegerField()),
                ('num_const_no_ret_field_t', models.PositiveIntegerField()),
                ('num_const_no_ret_field_nt', models.PositiveIntegerField()),
                ('num_const_no_ret_other', models.PositiveIntegerField()),
                ('num_const_maybe_ret_noop', models.PositiveIntegerField()),
                ('num_const_maybe_ret_field_t', models.PositiveIntegerField()),
                ('num_const_maybe_ret_field_nt', models.PositiveIntegerField()),
                ('num_const_maybe_ret_other', models.PositiveIntegerField()),
                ('num_fields', models.PositiveIntegerField()),
                ('num_mutable_fields', models.PositiveIntegerField()),
                ('num_explicit_fields', models.PositiveIntegerField()),
                ('num_transitive_fields', models.PositiveIntegerField()),
                ('num_only_explicit_fields', models.PositiveIntegerField()),
                ('num_only_transitive_fields', models.PositiveIntegerField()),
                ('num_neither_explicit_transitive_fields', models.PositiveIntegerField()),
                ('num_both_explicit_transitive_fields', models.PositiveIntegerField()),
                ('record', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='counts', serialize=False, to='django_cpp_doc.RecordDecl')),
            ],
            options={
                'verbose_name': 'Record Counts',
                'verbose_name_plural': 'Record Counts',
                'db_table': 'cpp_doc_record_counts',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='publicview',
            name='record',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='public_view', to='django_cpp_doc.RecordDecl'),
        ),
        migrations.AlterUniqueTogether(
            name='presumedloc',
            unique_together={('file', 'line', 'col')},
        ),
        migrations.AlterUniqueTogether(
            name='linkage',
            unique_together={('package', 'file', 'output')},
        ),
        migrations.AlterUniqueTogether(
            name='filedescriptor',
            unique_together={('package', 'parent', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='decl',
            unique_together={('package', 'path')},
        ),
        migrations.AlterUniqueTogether(
            name='compilecommand',
            unique_together={('package', 'file', 'output')},
        ),
        migrations.AddField(
            model_name='clangimmutabilitymethoddependence',
            name='callee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='called_by', to='django_cpp_doc.MethodDecl'),
        ),
        migrations.AddField(
            model_name='clangimmutabilitymethoddependence',
            name='method',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependencies', to='django_cpp_doc.MethodDecl'),
        ),
        migrations.AlterUniqueTogether(
            name='publicview',
            unique_together={('record', 'decl')},
        ),
        migrations.AlterUniqueTogether(
            name='clangimmutabilitymethoddependence',
            unique_together={('method', 'callee')},
        ),
    ]
